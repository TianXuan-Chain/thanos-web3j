package com.thanos.web3j.abi.datatypes.generated;

import com.thanos.web3j.channel.client.TransactionSucCallback;
import com.thanos.web3j.abi.datatypes.Address;
import com.thanos.web3j.abi.datatypes.Bool;
import com.thanos.web3j.abi.datatypes.DynamicBytes;
import com.thanos.web3j.abi.datatypes.Utf8String;

/**
 * <p>Auto generated code.<br>
 * <strong>Do not modifiy!</strong><br>
 * Please use {@link com.thanos.web3j.codegen.AbiTypesMapperGenerator} to update.</p>
 */
public final class AbiTypes {
  private AbiTypes() {
  }

  public static Class<?> getType(String type) {
    switch (type) {
      case "address":
          return Address.class;
      case "bool":
          return Bool.class;
      case "string":
          return Utf8String.class;
      case "bytes":
          return DynamicBytes.class;
      case "uint8":
          return Uint8.class;
      case "int8":
          return Int8.class;
      case "uint16":
          return Uint16.class;
      case "int16":
          return Int16.class;
      case "uint24":
          return Uint24.class;
      case "int24":
          return Int24.class;
      case "uint32":
          return Uint32.class;
      case "int32":
          return Int32.class;
      case "uint40":
          return Uint40.class;
      case "int40":
          return Int40.class;
      case "uint48":
          return Uint48.class;
      case "int48":
          return Int48.class;
      case "uint56":
          return Uint56.class;
      case "int56":
          return Int56.class;
      case "uint64":
          return Uint64.class;
      case "int64":
          return Int64.class;
      case "uint72":
          return Uint72.class;
      case "int72":
          return Int72.class;
      case "uint80":
          return Uint80.class;
      case "int80":
          return Int80.class;
      case "uint88":
          return Uint88.class;
      case "int88":
          return Int88.class;
      case "uint96":
          return Uint96.class;
      case "int96":
          return Int96.class;
      case "uint104":
          return Uint104.class;
      case "int104":
          return Int104.class;
      case "uint112":
          return Uint112.class;
      case "int112":
          return Int112.class;
      case "uint120":
          return Uint120.class;
      case "int120":
          return Int120.class;
      case "uint128":
          return Uint128.class;
      case "int128":
          return Int128.class;
      case "uint136":
          return Uint136.class;
      case "int136":
          return Int136.class;
      case "uint144":
          return Uint144.class;
      case "int144":
          return Int144.class;
      case "uint152":
          return Uint152.class;
      case "int152":
          return Int152.class;
      case "uint160":
          return Uint160.class;
      case "int160":
          return Int160.class;
      case "uint168":
          return Uint168.class;
      case "int168":
          return Int168.class;
      case "uint176":
          return Uint176.class;
      case "int176":
          return Int176.class;
      case "uint184":
          return Uint184.class;
      case "int184":
          return Int184.class;
      case "uint192":
          return Uint192.class;
      case "int192":
          return Int192.class;
      case "uint200":
          return Uint200.class;
      case "int200":
          return Int200.class;
      case "uint208":
          return Uint208.class;
      case "int208":
          return Int208.class;
      case "uint216":
          return Uint216.class;
      case "int216":
          return Int216.class;
      case "uint224":
          return Uint224.class;
      case "int224":
          return Int224.class;
      case "uint232":
          return Uint232.class;
      case "int232":
          return Int232.class;
      case "uint240":
          return Uint240.class;
      case "int240":
          return Int240.class;
      case "uint248":
          return Uint248.class;
      case "int248":
          return Int248.class;
      case "uint256":
          return Uint256.class;
      case "int256":
          return Int256.class;
      case "ufixed8x248":
          return Ufixed8x248.class;
      case "fixed8x248":
          return Fixed8x248.class;
      case "ufixed16x240":
          return Ufixed16x240.class;
      case "fixed16x240":
          return Fixed16x240.class;
      case "ufixed24x232":
          return Ufixed24x232.class;
      case "fixed24x232":
          return Fixed24x232.class;
      case "ufixed32x224":
          return Ufixed32x224.class;
      case "fixed32x224":
          return Fixed32x224.class;
      case "ufixed40x216":
          return Ufixed40x216.class;
      case "fixed40x216":
          return Fixed40x216.class;
      case "ufixed48x208":
          return Ufixed48x208.class;
      case "fixed48x208":
          return Fixed48x208.class;
      case "ufixed56x200":
          return Ufixed56x200.class;
      case "fixed56x200":
          return Fixed56x200.class;
      case "ufixed64x192":
          return Ufixed64x192.class;
      case "fixed64x192":
          return Fixed64x192.class;
      case "ufixed72x184":
          return Ufixed72x184.class;
      case "fixed72x184":
          return Fixed72x184.class;
      case "ufixed80x176":
          return Ufixed80x176.class;
      case "fixed80x176":
          return Fixed80x176.class;
      case "ufixed88x168":
          return Ufixed88x168.class;
      case "fixed88x168":
          return Fixed88x168.class;
      case "ufixed96x160":
          return Ufixed96x160.class;
      case "fixed96x160":
          return Fixed96x160.class;
      case "ufixed104x152":
          return Ufixed104x152.class;
      case "fixed104x152":
          return Fixed104x152.class;
      case "ufixed112x144":
          return Ufixed112x144.class;
      case "fixed112x144":
          return Fixed112x144.class;
      case "ufixed120x136":
          return Ufixed120x136.class;
      case "fixed120x136":
          return Fixed120x136.class;
      case "ufixed128x128":
          return Ufixed128x128.class;
      case "fixed128x128":
          return Fixed128x128.class;
      case "ufixed136x120":
          return Ufixed136x120.class;
      case "fixed136x120":
          return Fixed136x120.class;
      case "ufixed144x112":
          return Ufixed144x112.class;
      case "fixed144x112":
          return Fixed144x112.class;
      case "ufixed152x104":
          return Ufixed152x104.class;
      case "fixed152x104":
          return Fixed152x104.class;
      case "ufixed160x96":
          return Ufixed160x96.class;
      case "fixed160x96":
          return Fixed160x96.class;
      case "ufixed168x88":
          return Ufixed168x88.class;
      case "fixed168x88":
          return Fixed168x88.class;
      case "ufixed176x80":
          return Ufixed176x80.class;
      case "fixed176x80":
          return Fixed176x80.class;
      case "ufixed184x72":
          return Ufixed184x72.class;
      case "fixed184x72":
          return Fixed184x72.class;
      case "ufixed192x64":
          return Ufixed192x64.class;
      case "fixed192x64":
          return Fixed192x64.class;
      case "ufixed200x56":
          return Ufixed200x56.class;
      case "fixed200x56":
          return Fixed200x56.class;
      case "ufixed208x48":
          return Ufixed208x48.class;
      case "fixed208x48":
          return Fixed208x48.class;
      case "ufixed216x40":
          return Ufixed216x40.class;
      case "fixed216x40":
          return Fixed216x40.class;
      case "ufixed224x32":
          return Ufixed224x32.class;
      case "fixed224x32":
          return Fixed224x32.class;
      case "ufixed232x24":
          return Ufixed232x24.class;
      case "fixed232x24":
          return Fixed232x24.class;
      case "ufixed240x16":
          return Ufixed240x16.class;
      case "fixed240x16":
          return Fixed240x16.class;
      case "ufixed248x8":
          return Ufixed248x8.class;
      case "fixed248x8":
          return Fixed248x8.class;
      case "bytes1":
          return Bytes1.class;
      case "bytes2":
          return Bytes2.class;
      case "bytes3":
          return Bytes3.class;
      case "bytes4":
          return Bytes4.class;
      case "bytes5":
          return Bytes5.class;
      case "bytes6":
          return Bytes6.class;
      case "bytes7":
          return Bytes7.class;
      case "bytes8":
          return Bytes8.class;
      case "bytes9":
          return Bytes9.class;
      case "bytes10":
          return Bytes10.class;
      case "bytes11":
          return Bytes11.class;
      case "bytes12":
          return Bytes12.class;
      case "bytes13":
          return Bytes13.class;
      case "bytes14":
          return Bytes14.class;
      case "bytes15":
          return Bytes15.class;
      case "bytes16":
          return Bytes16.class;
      case "bytes17":
          return Bytes17.class;
      case "bytes18":
          return Bytes18.class;
      case "bytes19":
          return Bytes19.class;
      case "bytes20":
          return Bytes20.class;
      case "bytes21":
          return Bytes21.class;
      case "bytes22":
          return Bytes22.class;
      case "bytes23":
          return Bytes23.class;
      case "bytes24":
          return Bytes24.class;
      case "bytes25":
          return Bytes25.class;
      case "bytes26":
          return Bytes26.class;
      case "bytes27":
          return Bytes27.class;
      case "bytes28":
          return Bytes28.class;
      case "bytes29":
          return Bytes29.class;
      case "bytes30":
          return Bytes30.class;
      case "bytes31":
          return Bytes31.class;
      case "bytes32":
          return Bytes32.class;
      case "TransactionSucCallback":
          return TransactionSucCallback.class;
      default:
          throw new UnsupportedOperationException("Unsupported type encountered: " + type);
    }
  }
}
